[{"authors":["admin"],"categories":null,"content":"I am a physics resident with the Department of Radiation Oncology at the University of Pennsylvania Health System.\nBefore moving to Philadelphia, I completed a CAMPEP Accredited Postdoctoral Certificate program at Mayo Clinic, Rochester, Minnesota. My work delivered an in-house software tool for real-time motion management during proton therapy setup and treatment. This new tool, named Wukong, provides added assurance for internal tumor/target localization. It has been translated into clinical practice at Mayo Clinic Radiation Oncology Rochester, as a standard operating procedure (SOP). Additional deployment is being planned for Mayo Clinic Arizona.\nWith a former educational background in polymer physics, I studied nanoconfined polymer electrolytes for safer rechargeable lithium-ion batteries at Brookhaven National Laboratory. To that end, I performed synchrotron X-ray scattering experiments at the Advanced Photon Source and the National Synchrotron Light Source II.\nI enjoy solving scientific/quantitative problems by programming. In particular, I am fluent in Python and familiar with its scientific eco-system (i.e. NumPy, SciPy, Matplotlib, LmFit, Mayavi, scikit-image etc.). I like readable, elegant NumPy vectorization solutions, but am also comfortable with extending Python via Numba or pybind11/C++ for numerical performance boosting. For larger coding projects, I use C#/.NET (LINQ is marvelous) and strive for robustness and maintainability through good software engineering principles.\n","date":1576083600,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1576083600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://zhangresearch.org/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am a physics resident with the Department of Radiation Oncology at the University of Pennsylvania Health System.\nBefore moving to Philadelphia, I completed a CAMPEP Accredited Postdoctoral Certificate program at Mayo Clinic, Rochester, Minnesota. My work delivered an in-house software tool for real-time motion management during proton therapy setup and treatment. This new tool, named Wukong, provides added assurance for internal tumor/target localization. It has been translated into clinical practice at Mayo Clinic Radiation Oncology Rochester, as a standard operating procedure (SOP).","tags":null,"title":"Zheng Zhang, Ph.D.","type":"authors"},{"authors":["Zheng Zhang","Chris Beltran","Stephen M. Corner","Amanda J. Deisher","Michael G. Herman","Jon J. Kruse","Hok Seum Wan Chan Tseung","Erik J. Tryggestad"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   -- ","date":1581897600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581897600,"objectID":"bb4aee519018a2f9fcb424fa0b063666","permalink":"https://zhangresearch.org/publication/conference-paper/wukong-spie/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/wukong-spie/","section":"publication","summary":"Respiratory motion-management is crucial for maintaining robustness of the delivered dose in radiotherapy. This is particularly relevant for spot-scanned proton therapy, where motion-induced dosimetric “interplay” effects can severely perturb the planned dose distribution. Our proton therapy vendor developed a stereoscopic kV X-ray image-guidance platform along with a 3D/2D image matching algorithm for 6 degree-of-freedom patient positioning with a robotic couch. However, this vendor-provided solution lacks the capability to process and display X-ray fluoroscopic imaging, which is crucial for aspects of motion management. To address this clinical gap, we developed a Windows-based software tool in .NET/C# to passively acquire the vendor’s flat-panel detector (FPD) data stream (CameraLink) and handle fluoroscopic images in real time. We developed a novel calibration phantom and the accompanying room-geometry-specific calibration routine for projective overlay of DICOM-RT structures onto the 2D FPD images. Because our calibration routine has been developed independently this tool serves as an independent means to test and validate the vendor’s imaging geometry calibration. Having DICOM integration with our treatment planning infrastructure, this therapy tool automatically archives clinical X-ray data to a HIPAA-compliant cloud, and therefore serves as a data interface to retrieve previously recorded X-ray images and cine video streams. This functions as a platform for image guidance research in the future. The next goal on our roadmap is to develop computer-vision/deep-learning methods for real-time soft-tissue based tumor tracking.","tags":["IGPT"],"title":"A Windows GUI application for real-time image guidance during motion- managed proton beam therapy","type":"publication"},{"authors":["Zheng Zhang, Ph.D."],"categories":null,"content":"","date":1576083600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576083600,"objectID":"58869ee3d5be480373789656698bf051","permalink":"https://zhangresearch.org/talk/2019therapists_ce/","publishdate":"2019-12-05T14:00:00-05:00","relpermalink":"/talk/2019therapists_ce/","section":"talk","summary":"","tags":[],"title":"Real-time image guidance for proton therapy with stereoscopic kV x-ray fluoroscopy","type":"talk"},{"authors":["Zheng Zhang"],"categories":[],"content":"Protecting patient information is of utmost importance to a hospital, not only because of regulatory mandate, but also because it is the right thing to do. For this reason, consumer grade cloud storage (e.g. Dropbox, OneDrive etc.) is typically not allowed on a hospital network-connected device. Business solutions such as Office 365 SharePoint, OneDrive for Business etc. sometimes may only be authorized to store non-patient business files, depending on institutional policy.\nIn such cases, robocopy to the provisioned account-specific domain home on the intranet makes a lot of sense. I store the command line below in a .ps1 PowerShell script, and create a task in Task Scheduler to be run every midnight.\nROBOCOPY C:\\Workspace \\\\INTRANET\\UserHome\\Backup\\Workspace /DCOPY:DA /MT /MIR /FFT /Z /XA:SH /R:0 /TEE /XJD  This script only update new or updated files to the network share.\n","date":1570839540,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570839540,"objectID":"64c837729e76647982fedebc318209c3","permalink":"https://zhangresearch.org/post/powershell-backup-script/","publishdate":"2019-10-12T00:19:00Z","relpermalink":"/post/powershell-backup-script/","section":"post","summary":"Protecting patient information is of utmost importance to a hospital, not only because of regulatory mandate, but also because it is the right thing to do. For this reason, consumer grade cloud storage (e.g. Dropbox, OneDrive etc.) is typically not allowed on a hospital network-connected device. Business solutions such as Office 365 SharePoint, OneDrive for Business etc. sometimes may only be authorized to store non-patient business files, depending on institutional policy.","tags":["PowerShell","Backup"],"title":"Automated data backup to HIPAA-compliant institutional network share using robocopy","type":"post"},{"authors":["Zheng Zhang, Ph.D."],"categories":null,"content":"","date":1569514200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569514200,"objectID":"eef22355fbe92120cbdae11d6c0de50e","permalink":"https://zhangresearch.org/talk/2019ground_rounds/","publishdate":"2019-08-01T14:50:00-04:00","relpermalink":"/talk/2019ground_rounds/","section":"talk","summary":"","tags":[],"title":"An in-house Windows GUI application for fluoroscopy-based 4D image guidance in proton beam therapy","type":"talk"},{"authors":["Zheng Zhang","Junjun Ding","Benjamin M. Ocko","Andrei Fluerasu","Lutz Wiegart","Yugang Zhang","Mark Kobrak","Ye Tian","Honghu Zhang","Julien Lhermitte","Chang-Hwan Choi","Frank T. Fisher","Kevin G. Yager","Charles T. Black"],"categories":null,"content":"","date":1567900800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567900800,"objectID":"067c41a96588083fe754a6670e00f890","permalink":"https://zhangresearch.org/publication/journal-article/nanoscale-viscosity/","publishdate":"2019-09-08T00:00:00Z","relpermalink":"/publication/journal-article/nanoscale-viscosity/","section":"publication","summary":"Complex fluids near interfaces or confined within nanoscale volumes can exhibit substantial shifts in physical properties compared to bulk, including glass transition temperature, phase separation, and crystallization. Because studies of these effects typically use thin film samples with one dimension of confinement, it is generally unclear how more extreme spatial confinement may influence these properties. In this work, we used X-ray photon correlation spectroscopy and gold nanoprobes to characterize polyethylene oxide confined by nanostructured gratings.","tags":[""],"title":"Nanoscale viscosity of confined polyethylene oxide","type":"publication"},{"authors":["Zheng Zhang","Junjun Ding","Benjamin M. Ocko","Julien Lhermitte","Joseph Strzalka","Chang-Hwan Choi","Frank T. Fisher","Kevin G. Yager","Charles T. Black"],"categories":null,"content":"","date":1565913600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1565913600,"objectID":"c9b132c9fadf8cc5252b010dd7c76219","permalink":"https://zhangresearch.org/publication/journal-article/nanoconfinement-and-salt/","publishdate":"2019-08-16T00:00:00Z","relpermalink":"/publication/journal-article/nanoconfinement-and-salt/","section":"publication","summary":"","tags":null,"title":"Nanoconfinement and salt synergistically suppress crystallization in polyethylene oxide","type":"publication"},{"authors":["Zheng Zhang"],"categories":[],"content":" The Visualization Toolkit (VTK) is the 3D engine behind many scientific visualization applications, such as MayaVi, the popular scientific data visualizer for Python. It is also the cornerstone of several advanced 3D-enabled biomedical applications, such as ParaView and 3D Slicer.\nPerhaps lesser known, VTK provides a built-in high performance DICOM parser, because of its deep roots within the biomedical community. For my own clinical project, I have recently started learning and using VTK. I found its learning curve to be somewhat steep for a beginner, mostly due to the scarcity of up-to-date tutorials. These are my notes on compiling VTK 8.2.0 from source under Windows 10 after trial-and-error and copious amount of googling, for future reference; I hope they can help you save some time, if you happen to be in the same shoes.\nHow to obtain VTK? VTK is written in C++. The easiest approach that I found to obtain pre-compiled binaries is through PyPI. VTK wheels for all major platforms are available. On Windows, pip downloads pre-compiled DLLs into the \u0026ldquo;site-packages\\vtk\u0026rdquo; directory of your Python distribution.\n\u0026gt; pip install vtk  You can call methods within these DLLs through the Python bindings.\nimport vtk  The Python bindings expose the VTK function signatures, but there are no equivalent C/C++ header files in this PIP-installed VTK directory. To build against VTK using C++, it\u0026rsquo;s better to compile directly from source code, which is available at vtk.org under BSD license.\nWhere to find the most up-to-date compiling/building guide? VTK is under active development by Kitware, Inc. This means that if you google \u0026ldquo;compile vtk\u0026rdquo; like I did, you will likely end up with obsolete tutorials. In fact, by the time you saw this blog post, it has probably become outdated in many ways.\nI found that the best guide for building the latest release is directly hosted on VTK\u0026rsquo;s development GitLab repository: build_windows_vs.md. I assume this document gets the maintainers\u0026rsquo; first attention whenever something is changed between releases.\nIn addition, the VTK Wiki contains lots of useful information. There is also the VTK Mailing List if you\u0026rsquo;d like to reach out to the VTK community directly.\nPrerequisites  Chocolatey to help manage packages.\n CMake\n\u0026gt; choco install cmake  Download and install Visual Studio. This is for the Microsoft Visual C++ compilers, so be sure to select them during installation.\n VTK source code\n  Generate Visual Studio project using CMake I put all of my dev tools under the same directory (C:\\toolchain). Extract VTK code source to \u0026ldquo;C:/toolchain/VTK/VTK-8.2.0-src\u0026rdquo;. Set the \u0026ldquo;Where to build the binaries\u0026rdquo; blank to \u0026ldquo;C:/toolchain/VTK/VTK-8.2.0-bld\u0026rdquo;. It is preferable to put the build directory outside the source directory.\nClick \u0026ldquo;Configure\u0026rdquo; to have CMake sort out the compilation variables. CMake will first prompt you to choose the generator.\nCompilation variables  CMAKE_INSTALL_PREFIX: This is rather important, as it sets the installation path of your compiled binaries. I changed the default path to a non-privileged location (C:/toolchain/VTK/VTK-8.2.0) so as to avoid dealing with permissions. While it is okay not to \u0026ldquo;install\u0026rdquo; VTK after building it - you can simply reference the build directory - the installation process extracts the \u0026ldquo;essence\u0026rdquo; of the built VTK files (.h, .lib, .dll, etc.) into an independent directory, and modifies the system environment variables for your convenience.\n BUILD_SHARED_LIBS: Check to build DLLs. Otherwise, only static libraries (.lib) will be generated.\n CMAKE_CXX_MP_FLAG: Check to support multi-core processors.\n BUILD_TESTING: Check to build testing cases.\n BUILD_EXAMPLES: Check to build examples.\n BUILD_DOCUMENTATION: Check to build documentation.\n If you are building VTK for use with Java, Python, MFC or Qt, you will need to check relevant compilation variables. I do not need those, so I skipped them.\n  BUILD_DOCUMENTATION is not really necessary, because it\u0026rsquo;s available for download (vtkDocHtml). It takes a long time to build the documentation and needs extra dev packages to support the compilation. I was mainly curious to see if there are any differences between my build vs the downloaded one.\nSeveral tutorials that I read recommend unchecking BUILD_TESTING, BUILD_EXAMPLES to save compilation time, because these examples tend to take even more time to compile than the core part of the VTK library. I figured that sample codes can be tremendously helpful for a beginner, so I decided to build them anyway.\nFor building these extra parts, you will need additional packages:\n For building documentation\n Doxygen\n Perl\n\u0026gt; choco install strawberryperl  Graphviz. This package contains the dot executable required by Doxygen.\n\u0026gt; choco install graphviz   For building testing\n VTKData and VTKLargeData. These are data and baseline images for VTK regression testing and other VTK examples. In principle, these two data sets should have been put together. They are separated into two batches because of long cvs checkout times. If you wish to test on VTKLargeData, you will need to check the VTK_USE_LARGE_DATA variable in CMake.   VTKData Older tutorials instructed me to set the VTK_DATA_ROOT for building examples. This variable is nowhere to be found in the current release. As it turns out, the VTK maintainers made some changes to the structure of the test data. You will now only need to extract the \u0026ldquo;.ExternalData\u0026rdquo; folder directly into the source directory (C:/toolchain/VTK/VTK-8.2.0-src/.ExternalData) and CMake will automatically download everything.\n On Tuesday, September 12, 2017 9:32 AM, David E DeMarle wrote:\nWe changed the structure of regression test data in 6.1 to allow developers to make proposed changes to code and data concurrently and ensure that the continuous integration test machines do not fail when they run new tests on old data. The net result is that a VTK build tree has test data files that are actually symbolic links to the md5 files which live elsewhere. You can generally open and use the symbolic links exactly as you would a normal data file. If you turn on testing in your build, cmake will try to download each one of the files. Alternatively you can untar the source and data packages for a release in the same directory and the default build setup will use them and avoid downloading anything else.\n Compiling Click \u0026ldquo;Configure\u0026rdquo; every time you change any variables. It may take a few times. Correct all errors and make sure there are no reds, as seen below: Then click \u0026ldquo;Generate\u0026rdquo; to create the Visual Studio solution file, and then click \u0026ldquo;Open Project\u0026rdquo;. This will launch Visual Studio. Set the Build Configuration to \u0026ldquo;RelWithDebInfo\u0026rdquo;. Build (\u0026ldquo;Build \u0026ndash;\u0026gt; Build Solution\u0026rdquo;) the ALL_BUILD project first, which is the default when Visual Studio is launched. This may take a while. The compiled DLLs will be located in \u0026ldquo;C:\\toolchain\\VTK\\VTK-8.2.0-bld\\bin\\RelWithDebInfo\\\u0026ldquo;.\nBuild the INSTALL project. This installs VTK into the directory as set in the CMAKE_INSTALL_PREFIX CMake variable.\n","date":1559089380,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559089380,"objectID":"15bdfad9fa332bcd34d82d25c3146762","permalink":"https://zhangresearch.org/post/compile-vtk-8.2.0/","publishdate":"2019-05-29T00:23:00Z","relpermalink":"/post/compile-vtk-8.2.0/","section":"post","summary":"The Visualization Toolkit (VTK) is the 3D engine behind many scientific visualization applications, such as MayaVi, the popular scientific data visualizer for Python. It is also the cornerstone of several advanced 3D-enabled biomedical applications, such as ParaView and 3D Slicer.\nPerhaps lesser known, VTK provides a built-in high performance DICOM parser, because of its deep roots within the biomedical community. For my own clinical project, I have recently started learning and using VTK.","tags":["VTK"],"title":"Compile VTK 8.2.0 with Visual Studio 2019","type":"post"},{"authors":null,"categories":null,"content":"To augment our proton facility vendor\u0026rsquo;s hardware with the capability of fluoroscopy-based motion verification and monitoring, I am developing a computer vision application (Code name: Wukong), based on high-speed acquisition and real-time processing of flat-panel detector (FPD) data streams. Built as a fully DICOM-aware utility, this .NET/C# Windows desktop application has been integrated into existing treatment planning workflow with Varian Eclipse Scripting API. It also provides an optional ability to store live-captured fluoroscopic data on a HIPAA-compliant scalable storage cloud.\n","date":1557892800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557892800,"objectID":"49732b5bd79b94a258d3180e998899a0","permalink":"https://zhangresearch.org/project/wukong-app-dev/","publishdate":"2019-05-15T00:00:00-04:00","relpermalink":"/project/wukong-app-dev/","section":"project","summary":"To augment our proton facility vendor's hardware with the capability of fluoroscopy-based motion verification and monitoring, I am developing a computer vision application (Code name: Wukong), based on high-speed acquisition and real-time processing of flat-panel detector (FPD) data streams. Built as a fully DICOM-aware utility, this .NET/C# Windows desktop application has been integrated into existing treatment planning workflow with Varian Eclipse Scripting API. It also provides an optional ability to store live-captured fluoroscopic data on a HIPAA-compliant scalable storage cloud.","tags":["IGPT"],"title":"Image-guidance Software Development","type":"project"},{"authors":["Zheng Zhang"],"categories":[],"content":" Indexing a multi-dimensional Numpy array Accessing a multi-dimensional Numpy array by indices is useful for many tasks, such as parsing the contours in a DICOM-RTSTRUCT file.\nAs a simple example, we are given a 5 x 6 array arr, and a list of the coordinates of 3 points coords:\n\u0026gt;\u0026gt;\u0026gt; import numpy as np \u0026gt;\u0026gt;\u0026gt; arr = np.arange(30).reshape(5,6) \u0026gt;\u0026gt;\u0026gt; coords = np.array([[0, 1], [3, 4], [3, 2]]) \u0026gt;\u0026gt;\u0026gt; arr array([[ 0, 1, 2, 3, 4, 5], [ 6, 7, 8, 9, 10, 11], [12, 13, 14, 15, 16, 17], [18, 19, 20, 21, 22, 23], [24, 25, 26, 27, 28, 29]]) \u0026gt;\u0026gt;\u0026gt; coords array([[0, 1], [3, 4], [3, 2]])  To obtain the values of the targeted pixels as a list [arr[0,1], arr[3,4], arr[3,2]], that is [1, 22, 20], it is tempting to write \u0026ldquo;arr[coords]\u0026ldquo;. But this is incorrect.\n\u0026gt;\u0026gt;\u0026gt; arr[coords] array([[[ 0, 1, 2, 3, 4, 5], [ 6, 7, 8, 9, 10, 11]], [[18, 19, 20, 21, 22, 23], [24, 25, 26, 27, 28, 29]], [[18, 19, 20, 21, 22, 23], [12, 13, 14, 15, 16, 17]]])  Using a list of indices like this is correct in MATLAB, but not in Numpy. Why?\nFancy indexing Passing an array of indices to access multiple elements at once is referred to as Fancy Indexing in Numpy.\nThe most important rule to remember is that:\n The (broadcasted) shape of the index array determines that of the output array.\n \u0026gt;\u0026gt;\u0026gt; coords.shape (3, 2) \u0026gt;\u0026gt;\u0026gt; arr[coords].shape (3, 2, 6)  Fancy indexing is basically a way to avoid writing Python loops, by having numpy do it internally for you with its more efficient, lower-level loops.\nIn this case, arr[coords] is actually sampling the rows rather than the elements. Conceptually, we get:\narray([[arr[0], arr[1]], [arr[3], arr[4]], [arr[3], arr[2]]])  or\narray([[0th row, 1st row], [3rd row, 4th row], [3rd row, 2nd row]])  The correct way is to first obtain both the column and row indices as two lists (1D arrays), and then pass them to arr for fancy indexing.\n\u0026gt;\u0026gt;\u0026gt; rows = coords[:,0] \u0026gt;\u0026gt;\u0026gt; cols = coords[:,1] \u0026gt;\u0026gt;\u0026gt; arr[rows, cols] array([ 1, 22, 20])  numpy.unravel_index Another approach would be to access the multi-dimensional array as a 1D array.\nIn C++, accessing a multi-dimensional array can be done as though it were a 1D array: \u0026ldquo;arr[col][row]\u0026rdquo; is equivalent to \u0026ldquo;arr[(row-1)*n_cols + col]\u0026ldquo;. This is because that multi-dimensional array is allocated on a contiguous span of memory, which is 1D. \u0026ldquo;(row-1)*n_cols + col\u0026rdquo; is basically how deep you\u0026rsquo;re into this span of memory.\nThe internal data representation of a Numpy array is conceptually the same. You can use ravel() to obtain a 1D view of the array without copying, and use \u0026ldquo;ravel_multi_index()\u0026rdquo; to translate the indices into 1D.\nravel_multi_index() and numpy.unravel_index() are inverse operations. Their MATLAB equivalents are sub2ind and ind2sub.\n\u0026gt;\u0026gt;\u0026gt; arr.ravel()[np.ravel_multi_index(coords.T, arr.shape)] array([ 1, 22, 20])  Modify multiple elements at once It is worth noting that, using either fancy indexing method, not only you can read out the elements, but also modify them at once.\nThis is particularly useful if you need to parse the discrete contour points into a 2D map like below.\n\u0026gt;\u0026gt;\u0026gt; img = np.zeros((5,6)).astype(bool) \u0026gt;\u0026gt;\u0026gt; img array([[False, False, False, False, False, False], [False, False, False, False, False, False], [False, False, False, False, False, False], [False, False, False, False, False, False], [False, False, False, False, False, False]]) \u0026gt;\u0026gt;\u0026gt; img[rows, cols] = True \u0026gt;\u0026gt;\u0026gt; img array([[False, True, False, False, False, False], [False, False, False, False, False, False], [False, False, False, False, False, False], [False, False, True, False, True, False], [False, False, False, False, False, False]])  or\n\u0026gt;\u0026gt;\u0026gt; img.ravel()[np.ravel_multi_index(coords.T, img.shape)] = True \u0026gt;\u0026gt;\u0026gt; img array([[False, True, False, False, False, False], [False, False, False, False, False, False], [False, False, False, False, False, False], [False, False, True, False, True, False], [False, False, False, False, False, False]])  ","date":1555287540,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555287540,"objectID":"be9eb90a4937369d929ac44ca039fee9","permalink":"https://zhangresearch.org/post/numpy-unravel-index/","publishdate":"2019-04-15T00:19:00Z","relpermalink":"/post/numpy-unravel-index/","section":"post","summary":"Indexing a multi-dimensional Numpy array Accessing a multi-dimensional Numpy array by indices is useful for many tasks, such as parsing the contours in a DICOM-RTSTRUCT file.\nAs a simple example, we are given a 5 x 6 array arr, and a list of the coordinates of 3 points coords:\n\u0026gt;\u0026gt;\u0026gt; import numpy as np \u0026gt;\u0026gt;\u0026gt; arr = np.arange(30).reshape(5,6) \u0026gt;\u0026gt;\u0026gt; coords = np.array([[0, 1], [3, 4], [3, 2]]) \u0026gt;\u0026gt;\u0026gt; arr array([[ 0, 1, 2, 3, 4, 5], [ 6, 7, 8, 9, 10, 11], [12, 13, 14, 15, 16, 17], [18, 19, 20, 21, 22, 23], [24, 25, 26, 27, 28, 29]]) \u0026gt;\u0026gt;\u0026gt; coords array([[0, 1], [3, 4], [3, 2]])  To obtain the values of the targeted pixels as a list [arr[0,1], arr[3,4], arr[3,2]], that is [1, 22, 20], it is tempting to write \u0026ldquo;arr[coords]\u0026ldquo;.","tags":["numpy","DICOM"],"title":"Modify multiple elements of a Numpy ndarray with ravel_multi_index","type":"post"},{"authors":["Zheng Zhang"],"categories":[],"content":" DICOM-RTSTRUCT Contour Data Contours drawn for radiotherapy are saved as DICOM RT Structure Set (\u0026ldquo;RT\u0026rdquo; stands for radiotherapy.) in DICOM Standard, and usually as a single file. You can locate this file among CT or MRI data sets quite reliably, by traversing recursively through the directories and looking for MODALITY of \u0026ldquo;RTSTRUCT\u0026rdquo;.\nIn this modality, the contours are saved as 2D polygons slice by slice under the Contour Data (3006,0050) tag, which species the data format as:\n Sequence of (x,y,z) triplets defining a contour in the patient based coordinate system described in Section C.7.6.2.1.1 (mm). See Section C.8.8.6.1 and Section C.8.8.6.3.\n In other words, the perimeter of a sliced contour is specified by a sequence of discrete points.\n[x0, y0, z0, x1, y1, z1, x2, y2, z2, ... xn, yn, zn]  This can be reshaped to (n+1)*3, representing n+1 points along this perimeter.\npixelCoords = np.array([[x0, y0, z0], [x1, y1, z1], [x2, y2, z2], ... [xn, yn, zn], ])  For example, the image below is a CT slice of a prostate phantom overlaid with these discrete points.\nContours as discrete points To generate a 2D representation of these discrete points, you will need to first convert the Contour Data from real word units (mm) to Pixel Coordinates (integers).\nI usually first generate an all-false boolean 2D array\nimport numpy as np arr = np.zeros(shape).astype(bool)  Then change those Contour Data pixels to True using fancy indexing.\ncols = pixelCoords[:,0] rows = pixelCoords[:,1] arr[cols, rows] = True # Note the order of indices (cols before rows)  Another approach would be using numpy.unravel_index. I describe this method in better details in a separate post.\nContours as binary mask Binary masks as shown above can be useful for things like pixel-wise semantic segmentation in deep learning. To create these masks, you might attempt to treat these points as a point cloud, and calculate their alpha shape. For concaved shapes, finding the correct parameter to draw the correct envelope can be tricky. In a field that focuses as much on reducing errors and uncertainties as Radiation Oncology, this method is simply not generic/robust enough.\nLuckily, the DICOM-RT file exported by treatment planning systems preserve the \u0026ldquo;connectivity\u0026rdquo; between the points, that is, they are saved consecutively either clockwise or counter-clockwise.\nIt turns out that the easiest approach to fill this contour is simply draw a filled polygon and cast that into a boolean 2D array.\nYou can do this with OpenCV:\nimport cv2 arr = np.zeros(shape) poly = pixelCoords[:,:2] cv2.fillPoly(img=arr, pts=[poly], color=1) mask = img.astype(bool)  or with Scikit-image:\nfrom skimage import draw vertex_col_coords = pixelCoords[:, 0] vertex_row_coords = pixelCoords[:, 1] fill_row_coords, fill_col_coords = draw.polygon(vertex_row_coords, vertex_col_coords, shape) mask = np.zeros(shape, dtype=np.bool) mask[fill_row_coords, fill_col_coords] = True  ","date":1552090800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1552090800,"objectID":"a26baf0e34d8b58b24f66d52b263b34f","permalink":"https://zhangresearch.org/post/parse-dicom-rtstruct-into-binary-masks/","publishdate":"2019-03-09T00:20:00Z","relpermalink":"/post/parse-dicom-rtstruct-into-binary-masks/","section":"post","summary":"DICOM-RTSTRUCT Contour Data Contours drawn for radiotherapy are saved as DICOM RT Structure Set (\u0026ldquo;RT\u0026rdquo; stands for radiotherapy.) in DICOM Standard, and usually as a single file. You can locate this file among CT or MRI data sets quite reliably, by traversing recursively through the directories and looking for MODALITY of \u0026ldquo;RTSTRUCT\u0026rdquo;.\nIn this modality, the contours are saved as 2D polygons slice by slice under the Contour Data (3006,0050) tag, which species the data format as:","tags":["numpy","DICOM"],"title":"Parse DICOM RTSTRUCT (Radiotherapy Structure Set) into binary masks using Numpy","type":"post"},{"authors":null,"categories":null,"content":"Accurate delivery of radiotherapy dose is predicated upon careful motion management. This is particularly true for spot-scanned proton therapy. Our proton therapy vendor developed a stereoscopic kV X-ray image-guidance platform for this purpose. While it is engineered to a given specification, the actual positions of the components (e.g. flat-panel detectors) may contain small errors. This project delivers an iterative algorithmic calibration routine to correct such errors, i.e. translation, rotation and non-affine distortions. The main motivation behind this routine is to enable high-fidelity perspective overlays of RT structure sets in our in-house clinical software. It may also be used as an independent QA of vendor\u0026rsquo;s own calibrations.\n","date":1551416400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1551416400,"objectID":"cea3f8732fe5a1be29add87b287ff56a","permalink":"https://zhangresearch.org/project/fpd-calibration/","publishdate":"2019-03-01T00:00:00-05:00","relpermalink":"/project/fpd-calibration/","section":"project","summary":"Accurate delivery of radiotherapy dose is predicated upon careful motion management. This is particularly true for spot-scanned proton therapy. Our proton therapy vendor developed a stereoscopic kV X-ray image-guidance platform for this purpose. While it is engineered to a given specification, the actual positions of the components (e.g. flat-panel detectors) may contain small errors. This project delivers an iterative algorithmic calibration routine to correct such errors, i.e. translation, rotation and non-affine distortions. The main motivation behind this routine is to enable high-fidelity perspective overlays of RT structure sets in our in-house clinical software. It may also be used as an independent QA of vendor's own calibrations.","tags":["IGPT"],"title":"Flat-panel Detector Calibration","type":"project"},{"authors":null,"categories":null,"content":"We probe the nanoscale viscosity and molecular structure of confined polymer electrolytes inside rigid nanovolumes, using X-ray photon correlation spectroscopy (XPCS) and grazing incidence X-ray scattering (GIWAXS), respectively. We show that gold nanoparticle as Brownian swimmers can be used to probe the nanoscale viscosity of a confined polymer melt, and that the effective viscosity is substantially different than in bulk. Our experiments take advantage of recent instrumental improvements at the Coheren Hard X-ray Scattering Beamline (CHX) at the National Synchrotron Light Source II (NSLS-II), which have yielded improved coherence, and extended beam stability.\n","date":1519534800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1519534800,"objectID":"239b1b0021d6deb52326833a399b57b2","permalink":"https://zhangresearch.org/project/nanoconfined-polymer-electrolytes/","publishdate":"2018-02-25T00:00:00-05:00","relpermalink":"/project/nanoconfined-polymer-electrolytes/","section":"project","summary":"We probe the nanoscale viscosity and molecular structure of confined polymer electrolytes (SPE) inside rigid nanovolumes, using X-ray photon correlation spectroscopy (XPCS) and grazing incidence X-ray scattering (GIWAXS), respectively.","tags":["nanoconfinement","X-ray scattering"],"title":"Nanoconfined polymer electrolytes","type":"project"},{"authors":["Ke Du","Myeongkee Park","Junjun Ding","Huan Hu","Zheng Zhang"],"categories":null,"content":"","date":1504483200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1504483200,"objectID":"7044a988342aa3df11cf5460552dd6cc","permalink":"https://zhangresearch.org/publication/journal-article/dna-patterning-perspective/","publishdate":"2017-09-04T00:00:00Z","relpermalink":"/publication/journal-article/dna-patterning-perspective/","section":"publication","summary":"DNA is the hereditary material that contains our unique genetic code. Since the first demonstration of two-dimensional (2D) nanopatterns by using designed DNA origami ~10 years ago, DNA has evolved into a novel technique for 2D and 3D nanopatterning. It is now being used as a template for the creation of sub-10 nm structures via either top-down or bottom-up approaches for various applications spanning from nanoelectronics, plasmonic sensing, and nanophotonics. The perspective starts with an historic overview and discusses the current state-of-the-art in DNA nanolithography. Emphasis is put on the challenges and prospects of DNA nanolithography as the next generation nanomanufacturing technique.","tags":[""],"title":"Sub-10 nm Patterning with DNA Nanostructures: A Short Perspective","type":"publication"},{"authors":["Mengyuan Wang","Justin M. Gorham","Jason P. Killgore","Maryam Omidvar","Haiqing Lin","Frank W. DelRio","Lewis M. Cox","Zheng Zhang","Yifu Ding"],"categories":null,"content":"","date":1501459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1501459200,"objectID":"44e419814ea18b2c789ecda2c26e84dd","permalink":"https://zhangresearch.org/publication/journal-article/pdms-skin-infiltration-polymerization/","publishdate":"2017-07-31T00:00:00Z","relpermalink":"/publication/journal-article/pdms-skin-infiltration-polymerization/","section":"publication","summary":"Surface modifications of elastomers and gels are crucial for emerging applications such as soft robotics and flexible electronics, in large part because they provide a platform to control wettability, adhesion, and permeability. Current surface modification methods via ultraviolet-ozone (UVO) and/or O2 plasma, atomic layer deposition (ALD), plasmas deposition, and chemical treatment impart a dense polymer or inorganic layer on the surface that is brittle and easy to fracture at low strain levels. This paper presents a new method, based on gel–liquid infiltration polymerization, to form hybrid skin layers atop elastomers. The method is unique in that it allows for control of the skin layer topography, with tunable feature sizes and aspect ratios as high as 1.8 without fracture. Unlike previous techniques, the skin layer formed here dramatically improves the barrier properties of the elastomer, while preserving skin layer flexibility. Moreover, the method is versatile and likely applicable to most interfacial polymerization systems and network polymers on flat and patterned surfaces.","tags":null,"title":"Formation of a Crack-Free, Hybrid Skin Layer with Tunable Surface Topography and Improved Gas Permeation Selectivity on Elastomers Using Gel–Liquid Infiltration Polymerization","type":"publication"},{"authors":["Jiliang Liu","Julien Lhermitte","Ye Tian","Zheng Zhang","Dantong Yu","Kevin G. Yager"],"categories":null,"content":"","date":1492992000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1492992000,"objectID":"56141bccffceae663a405f0b723d9c82","permalink":"https://zhangresearch.org/publication/journal-article/healing-x-ray-scattering-images/","publishdate":"2017-04-24T00:00:00Z","relpermalink":"/publication/journal-article/healing-x-ray-scattering-images/","section":"publication","summary":"X-ray scattering images contain numerous gaps and defects arising from detector limitations and experimental configuration. We present a method to heal X-ray scattering images, filling gaps in the data and removing defects in a physically meaningful manner. Unlike generic inpainting methods, this method is closely tuned to the expected structure of reciprocal-space data. In particular, we exploit statistical tests and symmetry analysis to identify the structure of an image; we then copy, average and interpolate measured data into gaps in a way that respects the identified structure and symmetry. Importantly, the underlying analysis methods provide useful characterization of structures present in the image, including the identification of diffuse versus sharp features, anisotropy and symmetry. The presented method leverages known characteristics of reciprocal space, enabling physically reasonable reconstruction even with large image gaps. The method will correspondingly fail for images that violate these underlying assumptions. The method assumes point symmetry and is thus applicable to small-angle X-ray scattering (SAXS) data, but only to a subset of wide-angle data. Our method succeeds in filling gaps and healing defects in experimental images, including extending data beyond the original detector borders.","tags":[""],"title":"Healing X-ray scattering images","type":"publication"},{"authors":["Zheng Zhang","G. C. Hilton","Ronggui Yang","Yifu Ding"],"categories":null,"content":"This article was featured on the back cover of Soft Matter, 2015, 11.\n","date":1439337600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1439337600,"objectID":"3f5053b91aa69536663d84e5a5f48e2e","permalink":"https://zhangresearch.org/publication/journal-article/concentric-rings/","publishdate":"2015-08-12T00:00:00Z","relpermalink":"/publication/journal-article/concentric-rings/","section":"publication","summary":"We present the first experimental study on the simultaneous capillary instability amongst viscous concentric rings suspended atop an immiscible medium. The rings ruptured upon annealing, with three types of phase correlation between neighboring rings. In the case of weak substrate confinement, the rings ruptured independently when they were sparsely distanced, but via an out-of-phase mode when packed closer. If the substrate confinement was strong, the rings would rupture via an in-phase mode, resulting in radially aligned droplets. The concentric ring geometry caused a competition between the phase correlation of neighboring rings and the kinetically favorable wavelength, yielding an intriguing, recursive surface pattern. This frustrated pattern formation behavior was accounted for by a scaling analysis.","tags":[""],"title":"Capillary rupture of suspended polymer concentric rings","type":"publication"},{"authors":["Zheng Zhang","Zhen Wang","Yifu Ding"],"categories":null,"content":"","date":1407196800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1407196800,"objectID":"040f842931c99d4b65089b868421d7f1","permalink":"https://zhangresearch.org/publication/journal-article/external-normal-pressure/","publishdate":"2014-08-05T00:00:00Z","relpermalink":"/publication/journal-article/external-normal-pressure/","section":"publication","summary":"Substrate wetting of the component(s) of thin polymer blend films strongly dictates their phase evolution during thermal annealing. In the case of wetting by one component being preferential than the other, a continuous wetting layer at the substrate will form. Here, we report that the preferential wetting of PMMA within a PS/PMMA thin film can be prevented under normal pressure. Moreover, the external pressure drives the PMMA wetting layer at the substrate (or a PMMA cushion layer intentionally placed between the blend film and the superstrate) into the isolated PMMA domains within the blend film. This results in a film morphology normally observed on neutral surfaces, revealing that normal pressure can potentially be used to effectively control the blend film morphology by preventing the hydrodynamic wetting.","tags":[""],"title":"External normal pressure prevents preferential wetting of PS/PMMA blend thin films","type":"publication"},{"authors":["Lewis M. Cox","Jason P. Killgore","Zhengwei Li","Zheng Zhang","Donna C. Hurley","Jianliang Xiao","Yifu Ding"],"categories":null,"content":"","date":1382659200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1382659200,"objectID":"93a36e1b62afb2699bd9ea5d351400c5","permalink":"https://zhangresearch.org/publication/journal-article/metal-polymer-janus-particles/","publishdate":"2013-10-25T00:00:00Z","relpermalink":"/publication/journal-article/metal-polymer-janus-particles/","section":"publication","summary":"The direct deformation and shape recovery of micron-sized polystyrene particles via nanoimprint lithography is reported. The recovery of the programmed PS particles can be utilized to create a range of smart Janus particles with contrasting properties in conductivity and topography, by use of metal-layer constrained recovery.","tags":[""],"title":"Morphing metal–polymer Janus particles","type":"publication"},{"authors":["Zheng Zhang","Daniela Molina Piper","Seoung-Bum Son","Seul Cham Kim","Kyu Hwan Oh","Se-Hee Lee","Yifu Ding"],"categories":null,"content":" Fabrication Process   -- ","date":1380844800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1380844800,"objectID":"4484e76ed8f2668225e218eb3653013b","permalink":"https://zhangresearch.org/publication/journal-article/carbon-nanopattern/","publishdate":"2013-10-04T00:00:00Z","relpermalink":"/publication/journal-article/carbon-nanopattern/","section":"publication","summary":"We present the fabrication of lithographically defined carbon patterns and nanoribbons using a common carbon precursor, polyacrylonitrile (PAN). This method is based on nanoimprint lithography and has been demonstrated to be reliable and capable of nanofabrication over a large surface area at low cost, compared with current carbon-patterning techniques. Most interestingly, the deformation profile of the PAN during the imprinting process resulted in a distribution of aligned PAN chains within the patterns, which led to a similar anisotropic correlation of the carbon crystallites in the carbonized structures.","tags":[""],"title":"Carbon nanopatterns and nanoribbons from directly nanoimprinted polyacrylonitrile","type":"publication"},{"authors":["Liang Wang","Zheng Zhang","Yifu Ding"],"categories":null,"content":"","date":1363651200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1363651200,"objectID":"db8fbcb61959ad7de96eec85b0ae5ef9","permalink":"https://zhangresearch.org/publication/journal-article/photocrosslinking-induced-phase-separation/","publishdate":"2013-03-19T00:00:00Z","relpermalink":"/publication/journal-article/photocrosslinking-induced-phase-separation/","section":"publication","summary":"We report the structure formation of films obtained via photocrosslinking of precursors during the evaporation of solvents. Although most precursor/solvent systems result in uniform dense films after the process, reaction-induced phase separation can occur in solvents with a unique combination of solubility, evaporation rate and ratio of latent heat to heat capacity. Most significantly, for such solvents, the forced convective evaporation under controlled N2 flow results in a highly hierarchical film morphology, featuring a skin layer on top of a layer of microspheres formed via a nucleation and growth mechanism. For the first time, the skin layer formed during the evaporation was directly observed after the complete evaporation of the solvent. The thickness of the skin layer is dependent on the processing parameters including the N2 flow rate, UV intensity and precursor concentrations. The skin layer formation could be suppressed by addition of non-solvent, in which case the characteristic morphology resulted from dominant spinodal decomposition. A model is presented that can qualitatively describe the skin layer formation and its dependence on the processing parameters, providing a mechanistic understanding of the photocrosslinking-induced phase separation under evaporative environments.","tags":null,"title":"Photocrosslinking-induced phase separation in evaporative solvents: formation of skin layers and microspheres","type":"publication"},{"authors":["Zheng Zhang","Liang Wang","Yifu Ding"],"categories":null,"content":"","date":1360281600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1360281600,"objectID":"f9c538b92cf4460175526aaab501a5d1","permalink":"https://zhangresearch.org/publication/journal-article/influence-of-substrate-confinement/","publishdate":"2013-02-08T00:00:00Z","relpermalink":"/publication/journal-article/influence-of-substrate-confinement/","section":"publication","summary":"We investigated the influence of substrate confinement on the capillary breakup of parallel nonaxisymmetric polymer stripes suspended on top of, or confined between, another immiscible polymer pattern. When the residual layer thickness of the pattern was reasonably large, the PS (or PMMA) stripes confined within PMMA (or PS) trenches broke up, either nucleated, out-of-phase, or without clear phase correlation depending on the geometry and viscosity ratio between the two polymers. In stark contrast, for the two extreme cases of viscosity ratios we studied, in-phase breakup of confined polymer stripes was always observed when the alternating PS/PMMA stripes were formed, that is, without residual layer, regardless of the specific geometry.","tags":[""],"title":"Influence of Substrate Confinement on the Phase-Correlation in the Capillary Breakup of Arrays of Patterned Polymer Stripes","type":"publication"},{"authors":["Zheng Zhang","Dae Up Ahn","Yifu Ding"],"categories":null,"content":"","date":1329264000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1329264000,"objectID":"284e15926bd1506dcf4671cfed680921","permalink":"https://zhangresearch.org/publication/journal-article/instabilities-of-pspmma/","publishdate":"2012-02-15T00:00:00Z","relpermalink":"/publication/journal-article/instabilities-of-pspmma/","section":"publication","summary":"We study the patterns spontaneously formed by bilayer polymer films upon annealing. Specifically, polystyrene (PS) films were spin-cast on topographically patterned poly(methyl methacrylate) (PMMA) substrates and subsequently annealed at temperatures above the glass transition temperature of both polymers. The influence of the molecular weight and the volume of PS on the morphological evolution of the corrugated liquid–liquid interface was examined. By controlling the molecular weight and the spin-cast volume of the top layer, the kinetics of morphological evolution and the resulting patterns can be controlled.","tags":[""],"title":"Instabilities of PS/PMMA Bilayer Patterns with a Corrugated Surface and Interface","type":"publication"},{"authors":["Xiulin Fan","Xuezhang Xiao","Jiechang Hou","Zheng Zhang","Yuanbo Liu","Zhe Wu","Changpin Chen","Qidong Wang","Lixin Chen"],"categories":null,"content":"","date":1248220800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1248220800,"objectID":"52b0c469ac197c56f6f0fb3582edb6e1","permalink":"https://zhangresearch.org/publication/journal-article/reversible-hydrogen-storage/","publishdate":"2009-07-22T00:00:00Z","relpermalink":"/publication/journal-article/reversible-hydrogen-storage/","section":"publication","summary":"TiC-doped NaAlH4 complex hydride was prepared by hydrogenating of ball-milled NaH/Al mixture in the presence of 5 mol% TiC powder, and its hydrogen storage behaviors and microstructure were investigated. It is found that TiC is a good catalyst for the reversible hydriding/dehydriding process of NaAlH4 at moderate temperatures by reducing the decomposition temperature and improving the hydriding/dehydriding kinetics. The hydrogen desorption capacity of 5 mol% TiC-doped NaAlH4 is 4.6 wt% at 165 °C and its average dehydriding rate in the first 30 min reaches 0.107 wt%/min. X-ray diffraction analyses show that the size of crystal grains of the composites is reduced by ball-milling, and is then increased rapidly in the first hydriding–dehydriding cycle. Scanning electron micrographs represent that the particle size of the ball-milled composites is quite even and averages around 50 nm. However, it changes into a widely distributed one ranging from 50 nm to 1 μm in the subsequent hydriding–dehydriding cycles. DSC measurement indicates that the doping of TiC can lower the dehydriding temperatures of sodium aluminum hydride.","tags":null,"title":"Reversible hydrogen storage behaviors and microstructure of TiC-doped sodium aluminum hydride","type":"publication"}]